usleep : in ms
usleep(250000); == 1/4 second

gettimeofday :
int gettimeofday(struct timeval *tv, struct timezone *tz);




pthread_create :
int pthread_create(pthread_t * thread, pthread_attr_t * attr, void * (*start_routine)(void *), void * arg);
>> create 1 thread
args = thread_id, attributes (NULL), function_name, arguments passed to function

pthread_join :
>> like wait()
args = thread_id, NULL

pthread_detach




pthread_mutex_init
>> in main thread, before using locks, use pthread_mutex_init(&mutex, NULL);

pthread_mutex_lock
pthread_mutex_t mutex;
pthread_mutex_lock(&mutex);

pthread_mutex_unlock
  // unlock to make the critical section available to other threads

pthread_mutex_destroy
>> in main thread, after using locks, use pthread_mutex_destroy(&mutex);