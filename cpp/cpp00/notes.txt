std::cout << "string" << std::endl;
= output to string + nl sortie standard

char buf[512]
std::cin >> buf 
= redirect flux entree standard to variable buff (get input)

destructor & constructors don't have a return type

this = pointeur sur instance courante (even in void functions)



!! USE CONSTANTS !!! (code + robuste)

float const pi;
int qd;
Sample::Sample(float const f) : pi(f), qd(42){}

void function(void) const;
= protects class : current class instance can't be changed from member function
!! use const pour ecrire onction membre qui ne modifie pas l'instance de la classe !!