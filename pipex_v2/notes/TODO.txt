    TESTS

cat < Makefile | cat -e | cat > test.txt
./pipex Makefile cat "cat -e" cat test.txt

./pipex /dev/stdin ls "wc -l" /dev/stdout
ls | wc -l

< exist_input catds /dev/random | ls
>> NOT WORKING : should execute 2nd command after printing error message 

cat < Makefile | tac > output.txt
= SAME AS
cat < Makefile | tac > output.txt
_________________________________________________________________________________________________________________________________

-[ ] Entree standard /dev/stdin (some commands dont work ex : cat)


    CHECKS
valgrind --trace-children = yes
valgrind --track-fds=yes
check open fd's : ls -la /proc/$$/fd
-[ ] tac = cat a l'envers
-[ ] < = entree standard (ex : < Makefile cat)
-[ ] > : out
-[ ] Check if : input = output
-[ ] CHECK ALL EXIT ROUTES : leaks, open fd's, error messages  

_________________________________________________________________________________________________________________________________
    ORIGINAL OUTPUT
- zsh: command not found: ok
- cat: ok.txt: No such file or directory
- bash: ok.txt: Aucun fichier ou dossier de ce type (infile missing)
>> check inv permissions

_________________________________________________________________________________________________________________________________
    ERRORS TO HANDLE

INIT data
- [ ] pipe error
- [ ] malloc errors (check exit status)
 
GET FILES
- [ ] outfile open
- [ ] infile open

GET CMD
- [ ] access read
- [ ] access execute

PROCESS
- [ ] fork error
- [ ] dup2
- [ ] execve
- [ ] waitpid
- [ ] child status in parent 

_________________________________________________________________________________________________________________________________
FUNCHECK FOR ALL MALLOC ERRORS
SET ULIMIT TO 0